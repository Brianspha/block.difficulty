import EmbarkJS from '../embarkjs';

const ExponentialConfig = {"abiDefinition":[],"deployedAddress":"0x169ce6175A7d9D4085367D4C6FD8c94e5678E5e5","className":"Exponential","args":[],"gas":72187,"gasPrice":"20000000000","silent":false,"track":true,"deploy":true,"realRuntimeBytecode":"6080604052600080fdfea265627a7a7230582056c2f17263f29818f4","realArgs":[],"code":"6080604052348015600f57600080fd5b50603e80601d6000396000f3fe6080604052600080fdfea265627a7a7230582056c2f17263f29818f4e17d7bee4ebf90775599537c704a3af762ec9e28a2000564736f6c634300050a0032","runtimeBytecode":"6080604052600080fdfea265627a7a7230582056c2f17263f29818f4e17d7bee4ebf90775599537c704a3af762ec9e28a2000564736f6c634300050a0032","linkReferences":{},"swarmHash":"e17d7bee4ebf90775599537c704a3af762ec9e28a2000564736f6c634300050a","gasEstimates":{"creation":{"codeDepositCost":"12400","executionCost":"66","totalCost":"12466"},"internal":{"addExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","divExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","divScalar(struct Exponential.Exp memory,uint256)":"infinite","divScalarByExp(uint256,struct Exponential.Exp memory)":"infinite","divScalarByExpTruncate(uint256,struct Exponential.Exp memory)":"infinite","getExp(uint256,uint256)":"infinite","greaterThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","isZeroExp(struct Exponential.Exp memory)":"infinite","lessThanExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","lessThanOrEqualExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","mulExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","mulExp(uint256,uint256)":"infinite","mulExp3(struct Exponential.Exp memory,struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","mulScalar(struct Exponential.Exp memory,uint256)":"infinite","mulScalarTruncate(struct Exponential.Exp memory,uint256)":"infinite","mulScalarTruncateAddUInt(struct Exponential.Exp memory,uint256,uint256)":"infinite","subExp(struct Exponential.Exp memory,struct Exponential.Exp memory)":"infinite","truncate(struct Exponential.Exp memory)":"infinite"}},"functionHashes":{},"filename":"C:/Users/Spha/Documents/Github/block.difficulty/.embark/contracts/shared-contracts/compound/Exponential.sol","originalFilename":"contracts\\shared-contracts\\compound\\Exponential.sol","path":"C:\\Users\\Spha\\Documents\\Github\\block.difficulty\\contracts\\shared-contracts\\compound\\Exponential.sol","type":"file","deploymentAccount":"0x6Bb26B7893C6Aad51A429F445E0F9a625B0ef3E0","transactionHash":"0x97cfc1c77e113f449def22cecd1819720ed4f8549f139926d1a49f398b38bfc7"};
const Exponential = new EmbarkJS.Blockchain.Contract(ExponentialConfig);

export default Exponential;
